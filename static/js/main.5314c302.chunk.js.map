{"version":3,"sources":["components/CifradoAES.js","App.js","reportWebVitals.js","index.js"],"names":["initialForm","text","CifradoAES","useState","form","setForm","message","setMessage","respuesta","setRespuesta","style","width","onSubmit","e","preventDefault","texto","messageToCrypt","target","value","console","log","CryptoJS","AES","encrypt","toString","alert","name","cols","rows","placeholder","onChange","type","id","onClick","key","document","getElementById","decrypt","enc","Utf8","descifrar","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+SAGMA,EAAc,CAClBC,KAAM,IAgGOC,EA7FI,WACjB,MAAwBC,mBAASH,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KAEA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA6CA,OACE,sBAAKC,MAAO,CAAEC,MAAO,QAArB,UACE,0DAEA,uBAAMC,SAjCW,SAACC,GACpBA,EAAEC,iBAEF,IAjBcC,EAiBVC,EAAiBH,EAAEI,OAAOhB,KAAKiB,OACnCC,QAAQC,IAAIP,EAAEI,OAAOhB,KAAKiB,OAErBd,EAAKH,OAIRM,GAxBYQ,EAwBMC,EAvBDK,IAASC,IAAIC,QAC9BR,EACA,oBACAS,aAqBAL,QAAQC,IAAId,IAJZmB,MAAM,uCA0BN,UACE,0BACEC,KAAK,OACLC,KAAK,KACLC,KAAK,IACLC,YAAY,qCACZC,SAxBa,SAACjB,GACpBR,EAAQ,2BACHD,GADE,kBAEJS,EAAEI,OAAOS,KAAOb,EAAEI,OAAOC,UAsBtBA,MAAOd,EAAKH,OAEd,uBAAO8B,KAAK,SAASb,MAAM,cAE7B,8BACGZ,EACC,gCACE,4DAA+BA,KAC/B,uBACE0B,GAAG,WACHD,KAAK,WACLF,YAAY,uDAEd,uBAAOI,QA/BA,SAACpB,GAChB,IAAIqB,EAAMC,SAASC,eAAe,YAAYlB,MAC9CT,EA9BgB,SAACM,EAAOmB,GAGxB,OAFYb,IAASC,IAAIe,QAAQtB,EAAOmB,GACZV,SAASH,IAASiB,IAAIC,MA4BrCC,CAAUlC,EAAS4B,IAChCf,QAAQC,IAAIc,GACZf,QAAQC,IAAId,GACZa,QAAQC,IAAIZ,IA0BsBuB,KAAK,SAASb,MAAM,iBAGhD,sGAKHV,GAAaF,EACZ,gCACE,4DACCE,KAGH,OClFOiC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,M","file":"static/js/main.5314c302.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst initialForm = {\r\n  text: \"\",\r\n};\r\n\r\nconst CifradoAES = () => {\r\n  const [form, setForm] = useState(initialForm);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [respuesta, setRespuesta] = useState(\"\");\r\n\r\n  const cifrar = (texto) => {\r\n    var textoCifrado = CryptoJS.AES.encrypt(\r\n      texto,\r\n      \"@bryan.Galicia23\"\r\n    ).toString();\r\n    return textoCifrado;\r\n  };\r\n\r\n  const descifrar = (texto, key) => {\r\n    var bytes = CryptoJS.AES.decrypt(texto, key);\r\n    var textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);\r\n    return textoDescifrado;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let messageToCrypt = e.target.text.value;\r\n    console.log(e.target.text.value);\r\n\r\n    if (!form.text) {\r\n      alert(\"No has ingresado ningÃºn mensaje\");\r\n      return;\r\n    } else {\r\n      setMessage(cifrar(messageToCrypt));\r\n      console.log(message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const descrypt = (e) => {\r\n    var key = document.getElementById(\"mi-llave\").value;\r\n    setRespuesta(descifrar(message, key));\r\n    console.log(key);\r\n    console.log(message);\r\n    console.log(respuesta);\r\n  };\r\n  return (\r\n    <div style={{ width: \"90vw\" }}>\r\n      <h1>Algoritmo de cifrado AES</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"20\"\r\n          rows=\"5\"\r\n          placeholder=\"Introduce tu mensaje para cifrarlo\"\r\n          onChange={handleChange}\r\n          value={form.text}\r\n        ></textarea>\r\n        <input type=\"submit\" value=\"Cifrar\" />\r\n      </form>\r\n      <div>\r\n        {message ? (\r\n          <div>\r\n            <p>Tu mensaje ha sido cifrado {message}</p>\r\n            <input\r\n              id=\"mi-llave\"\r\n              type=\"password\"\r\n              placeholder=\"Ingresa la llave secreta para descifrar el mensaje\"\r\n            />\r\n            <input onClick={descrypt} type=\"submit\" value=\"Descifrar\" />\r\n          </div>\r\n        ) : (\r\n          <p>\r\n            Ingresa un mensaje secreto para poder cifrarlo con el algoritmo AES\r\n          </p>\r\n        )}\r\n      </div>\r\n      {respuesta && message ? (\r\n        <div>\r\n          <p>Este es el mensaje secreto:</p>\r\n          {respuesta}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CifradoAES;\r\n","import \"./App.css\";\nimport \"./Formulario.css\";\nimport CifradoAES from \"./components/CifradoAES\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CifradoAES />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}