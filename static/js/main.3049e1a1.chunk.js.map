{"version":3,"sources":["components/Message.js","components/CifradoAES.js","components/SubirArchivo.js","App.js","reportWebVitals.js","index.js"],"names":["Message","msg","styles","padding","marginBottom","textAlign","color","fontWeight","fontSize","borderRadius","backgroundColor","bgColor","style","dangerouslySetInnerHTML","__html","initialForm","text","CifradoAES","myKey","useState","form","setForm","message","setMessage","respuesta","setRespuesta","keyOk","setKeyOk","onSubmit","e","preventDefault","texto","key","messageToCrypt","target","value","CryptoJS","AES","encrypt","toString","alert","name","cols","rows","placeholder","onChange","type","id","onClick","document","getElementById","setTimeout","decrypt","enc","Utf8","descifrar","SubirArchivo","fileContent","setFileContent","resForFile","setResForFile","cifrar","firstFile","files","fileReader","FileReader","onload","event","fileContents","result","readAsText","initialConfirm","App","confirm","setConfirm","setMyKey","isOk","setIsOk","messageError","setMessageError","className","width","height","paddingTop","src","alt","listStyle","regexKey","test","trim","console","log","display","gap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3049e1a1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Message = ({ msg, bgColor }) => {\r\n  let styles = {\r\n    padding: \"3px\",\r\n    marginBottom: \"1rem\",\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.3rem\",\r\n    borderRadius: \"1rem\",\r\n    backgroundColor: bgColor,\r\n  };\r\n\r\n  return (\r\n    <div style={styles}>\r\n      <p dangerouslySetInnerHTML={{ __html: msg }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport Message from \"./Message\";\r\n\r\nconst initialForm = {\r\n  text: \"\",\r\n};\r\n\r\nconst CifradoAES = ({ myKey }) => {\r\n  const [form, setForm] = useState(initialForm);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [respuesta, setRespuesta] = useState(\"\");\r\n  const [keyOk, setKeyOk] = useState(true);\r\n\r\n  const cifrar = (texto, key) => {\r\n    var textoCifrado = CryptoJS.AES.encrypt(texto, key).toString();\r\n    return textoCifrado;\r\n  };\r\n\r\n  const descifrar = (texto, key) => {\r\n    var bytes = CryptoJS.AES.decrypt(texto, key);\r\n    var textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);\r\n    return textoDescifrado;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let messageToCrypt = e.target.text.value;\r\n    //console.log(e.target.text.value);\r\n\r\n    if (!form.text) {\r\n      alert(\"No has ingresado ningÃºn mensaje\");\r\n      return;\r\n    } else {\r\n      setMessage(cifrar(messageToCrypt, myKey));\r\n      setForm(initialForm);\r\n      //console.log(message);\r\n      //console.log(myKey);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const descrypt = (e) => {\r\n    var key = document.getElementById(\"mi-llave\").value;\r\n    if (key !== myKey) {\r\n      setKeyOk(false);\r\n      setTimeout(() => {\r\n        setKeyOk(true);\r\n        return;\r\n      }, 2500);\r\n    } else {\r\n      setRespuesta(descifrar(message, key));\r\n      //console.log(key);\r\n      //console.log(message);\r\n      //console.log(respuesta);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cifrador de texto</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"20\"\r\n          rows=\"3\"\r\n          placeholder=\"Introduce tu mensaje para cifrarlo\"\r\n          onChange={handleChange}\r\n          value={form.text}\r\n        ></textarea>\r\n        <input type=\"submit\" value=\"Cifrar\" />\r\n      </form>\r\n      <div>\r\n        {message ? (\r\n          <div>\r\n            <textarea cols=\"20\" rows=\"5\">\r\n              {message}\r\n            </textarea>\r\n            <input\r\n              id=\"mi-llave\"\r\n              type=\"password\"\r\n              placeholder=\"Ingresa la llave secreta para descifrar el mensaje\"\r\n            />\r\n            <input onClick={descrypt} type=\"submit\" value=\"Descifrar\" />\r\n            {keyOk ? \"\" : <Message msg=\"Llave incorrecta\" bgColor=\"#dc3545\" />}\r\n          </div>\r\n        ) : (\r\n          <p>\r\n            Ingresa un mensaje secreto para poder cifrarlo con el algoritmo AES\r\n          </p>\r\n        )}\r\n      </div>\r\n      {respuesta && message ? (\r\n        <div>\r\n          <p>Mensaje secreto:</p>\r\n          {respuesta}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CifradoAES;\r\n","import CryptoJS from \"crypto-js\";\r\nimport React, { useState } from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst SubirArchivo = ({ myKey }) => {\r\n  const [fileContent, setFileContent] = useState(\"\");\r\n  const [resForFile, setResForFile] = useState(\"\");\r\n  const [keyOk, setKeyOk] = useState(true);\r\n\r\n  const handleUploadFiles = (e) => {\r\n    //console.log(e.target.files[0]);\r\n    const firstFile = e.target.files[0];\r\n\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.onload = function (event) {\r\n      let fileContents = event.target.result;\r\n      //console.log(fileContents);\r\n\r\n      setFileContent(cifrar(fileContents, myKey));\r\n    };\r\n\r\n    fileReader.readAsText(firstFile);\r\n  };\r\n\r\n  const cifrar = (texto, key) => {\r\n    var textoCifrado = CryptoJS.AES.encrypt(texto, key).toString();\r\n    return textoCifrado;\r\n  };\r\n\r\n  const descifrar = (texto, key) => {\r\n    var bytes = CryptoJS.AES.decrypt(texto, key);\r\n    var textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);\r\n    return textoDescifrado;\r\n  };\r\n\r\n  const descrypt = (e) => {\r\n    var key = document.getElementById(\"mi-llave-for-file\").value;\r\n\r\n    if (key !== myKey) {\r\n      setKeyOk(false);\r\n      setTimeout(() => {\r\n        setKeyOk(true);\r\n        return;\r\n      }, 2500);\r\n    } else {\r\n      setResForFile(descifrar(fileContent, key));\r\n      //console.log(key);\r\n      //console.log(resForFile);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cifrador de archivos</h2>\r\n      <input onChange={handleUploadFiles} type=\"file\" name=\"archivo\" />\r\n\r\n      {!fileContent ? (\r\n        <p>Sin archivos</p>\r\n      ) : (\r\n        <div>\r\n          <textarea cols=\"20\" rows=\"10\">\r\n            {fileContent}\r\n          </textarea>\r\n          <input\r\n            name=\"text\"\r\n            id=\"mi-llave-for-file\"\r\n            type=\"password\"\r\n            placeholder=\"Ingresa la llave secreta para descifrar el mensaje\"\r\n          />\r\n          <input onClick={descrypt} type=\"submit\" value=\"Descifrar\" />\r\n          {keyOk ? \"\" : <Message msg=\"Llave incorrecta\" bgColor=\"#dc3545\" />}\r\n          {!resForFile ? (\r\n            \"\"\r\n          ) : (\r\n            <>\r\n              <br />\r\n              <p>Has Ingresado la llave correcta</p>\r\n              <textarea cols=\"20\" rows=\"10\">\r\n                {resForFile}\r\n              </textarea>\r\n              <br />\r\n              <br />\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubirArchivo;\r\n","import \"./App.css\";\nimport \"./Formulario.css\";\nimport CifradoAES from \"./components/CifradoAES\";\nimport SubirArchivo from \"./components/SubirArchivo\";\nimport React, { useState } from \"react\";\nimport Message from \"./components/Message\";\n\nconst initialForm = {\n  text: \"\",\n};\n\nconst initialConfirm = {\n  text: \"\",\n};\n\nfunction App() {\n  const [form, setForm] = useState(initialForm);\n  const [confirm, setConfirm] = useState(initialConfirm);\n  const [myKey, setMyKey] = useState(\"\");\n  const [isOk, setIsOk] = useState(true);\n  const [messageError, setMessageError] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let regexKey =\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&#.$($)$-$_])[A-Za-z\\d$@$!%*?&#.$($)$-$_]{12,}$/;\n\n    if (!form.text) {\n      setMessageError(\"No has ingresado la llave\");\n      setIsOk(false);\n      setTimeout(() => {\n        setIsOk(true);\n        return;\n      }, 2500);\n    } else if (!regexKey.test(form.text.trim())) {\n      setMessageError(\"La llave no cumple con los requisitos\");\n      setIsOk(false);\n      setTimeout(() => {\n        setIsOk(true);\n        return;\n      }, 2500);\n    } else if (form.text.trim() !== confirm.text.trim()) {\n      setMessageError(\"La confirmaciÃ³n no coincide\");\n      setIsOk(false);\n      setTimeout(() => {\n        setIsOk(true);\n        return;\n      }, 2500);\n    } else {\n      setMyKey(form.text.trim());\n    }\n    console.log(regexKey.test(form.text.trim()));\n    console.log(form.text.trim());\n  };\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const confirmHandleChange = (e) => {\n    setConfirm({\n      ...confirm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {!myKey ? (\n        <div>\n          <img\n            style={{\n              width: \"180px\",\n              height: \"180px\",\n              paddingTop: \"1rem\",\n            }}\n            src=\"https://images.vexels.com/media/users/3/132073/isolated/preview/5ded0426191618e9b7d33842d55e783c-icono-de-circulo-de-seguridad.png\"\n            alt=\"Seguridad\"\n          />\n          <h2>Algoritmo de cifrado AES</h2>\n          <p>\n            Bienvenido@, para iniciar con las pruebas, por favor ingresa una\n            llave con las siguientes caracterÃ­sticas\n          </p>\n          <ul style={{ fontSize: \"14px\", listStyle: \"none\" }}>\n            <li>- MÃ­nimo 12 caracteres</li>\n            <li>- Al menos una letra mayÃºscula</li>\n            <li>- Al menos una letra minÃºscula</li>\n            <li>- Al menos un dÃ­gito</li>\n            <li>- Al menos un caracter especial</li>\n            <li>- Sin espacios en blanco</li>\n          </ul>\n          <form onSubmit={handleSubmit}>\n            <div style={{ display: \"flex\", gap: \"1rem\" }}>\n              <input\n                name=\"text\"\n                type=\"password\"\n                placeholder=\"Ingresa tu llave para decifrar los mensajes\"\n                value={form.text}\n                onChange={handleChange}\n              />\n              <input\n                name=\"text\"\n                type=\"password\"\n                placeholder=\"Por favor, confirme su llave\"\n                value={confirm.text}\n                onChange={confirmHandleChange}\n              />\n            </div>\n            {isOk ? \"\" : <Message msg={messageError} bgColor=\"#dc3545\" />}\n            <input type=\"submit\" value=\"Enviar\" />\n          </form>\n        </div>\n      ) : (\n        <div>\n          <CifradoAES myKey={myKey} />\n          <hr />\n          <SubirArchivo myKey={myKey} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}